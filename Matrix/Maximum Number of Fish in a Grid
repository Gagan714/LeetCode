class Solution {
    public int findMaxFish(int[][] grid) {
        int max=0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]>0){
                    boolean [][]arr=new boolean[grid.length][grid[0].length];
                    max=Math.max(traverse(arr,grid,i,j),max);
                }
            }
        }
        return max;
    }
    public int traverse(boolean [][]arr,int [][]grid ,int r,int c){
        if(r<0 || r== grid.length || c<0 || c==grid[0].length || grid[r][c]==0 || arr[r][c]){
            return 0;
        }
        arr[r][c]=true;
        int maxi=0;
        maxi+=traverse(arr,grid,r-1,c);
        maxi+=traverse(arr,grid,r+1,c);
        maxi+=traverse(arr,grid,r,c-1);
        maxi+=traverse(arr,grid,r,c+1);
        return maxi+grid[r][c];
    }
}
