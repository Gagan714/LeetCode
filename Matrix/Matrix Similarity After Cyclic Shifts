class Solution {
     private static int[] cycle(int[] row, int k) {
        int n = row.length;
        k %= n;

        int[] output= new int[n];
        for (int i = 0; i < n; i++) {
            output[(i + k + n) % n] = row[i];
        }

        return output;
    }
    public boolean areSimilar(int[][] mat, int k) {
         int m = mat.length;
        int n = mat[0].length;
        int[][] origin=new int[m][n];
        for (int i=0; i<m;i++) {
            System.arraycopy(mat[i], 0,origin[i], 0, n);
        }
        for (int i=0;i<m;i++) {
            if (i%2==1) {
                mat[i]=cycle(mat[i], k);
            } else {
                mat[i]=cycle(mat[i], -k);
            }
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (origin[i][j]!= mat[i][j]) {
                    return false;
                }
            }
        }

        return true;
    }
}
