/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<String> output=new ArrayList<>();
    List<Integer> list=new ArrayList<>();
    public List<String> binaryTreePaths(TreeNode root) {
        Traverse(root);
        return output;
    }
    public void Traverse(TreeNode root){
        if(root==null){
            return;
        }
        if(root.left==null && root.right==null){
            String str="";
            for(int i=0;i<list.size();i++){
                str=str+list.get(i);
                if(i!=list.size()-1){
                    str+="->";
                }
            }
            output.add(str);
        }
        binaryTreePaths(root.left);
        binaryTreePaths(root.right);
    }
}
