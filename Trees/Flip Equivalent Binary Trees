/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean flipEquiv(TreeNode root1, TreeNode root2) {
    int []arr1=new int[100];
    int []arr2=new int[100];
    if(root1==null){
        if(root2==root1){
            return true;
        }
        return false;
    }
    if(root2==null){
        if(root2==root1){
            return true;
        }
        return false;
    }
        check(root1,root1.val,arr1);
        check(root2,root2.val,arr2);
        for(int i=0;i<99;i++){
            if(arr1[i]!=arr2[i]){
                return false;
            }
        }
        return true;
    }
    public void check(TreeNode root,int value,int []arr){
        if(root==null){
            return;
        }
        arr[root.val]=value;
        check(root.left,root.val,arr);
        check(root.right,root.val,arr);
    }
}
