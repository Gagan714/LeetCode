class Solution {
    public int longestPalindromeSubseq(String s) {
        int n=s.length();
        int dp[][]=new int[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                dp[i][j]=-1;
            }
        }
        return recurse(0,n-1,s,dp);
    }
    public int recurse(int start,int end,String s,int [][]dp){
        if(start==s.length() || end<0){
            return 0;
        }
        if(dp[start][end]!=-1){
            return dp[start][end];
        }
        if(s.charAt(start)==s.charAt(end)){
            return dp[start][end]=1+recurse(start+1,end-1,s,dp);
        }
        return dp[start][end]=Math.max(recurse(start+1,end,s,dp),recurse(start,end-1,s,dp));
    }
}
