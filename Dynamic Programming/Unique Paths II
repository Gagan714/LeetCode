class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if(obstacleGrid[0][0]==1){
            return 0;
        }
        int [][]dp=new int[obstacleGrid.length][obstacleGrid[0].length];
        return count(obstacleGrid,obstacleGrid.length-1,obstacleGrid[0].length-1,dp);
    }
    public int count(int [][]obstacleGrid,int m,int n,int[][]dp){
        if(m==0 && n==0){
            return 1;
        }
        if(obstacleGrid[m][n]==1){
            return 0;
        }
        if(dp[m][n]!=0){
            return dp[m][n];
        }
        int sum=0;
        if(m-1>=0){
            sum+=count(obstacleGrid,m-1,n,dp);
        }
        if(n-1>=0){
            sum+=count(obstacleGrid,m,n-1,dp);
        }
        return dp[m][n]=sum;
    }
}
