class Solution {
    public int maxCoins(int[] nums) {
       List<Integer> list=new ArrayList<>();
       list.add(1);
       for(int i=0;i<nums.length;i++){
        list.add(nums[i]);
       } 
       list.add(1);
       int dp[][]=new int[list.size()][list.size()];
       return recurse(1,nums.length,list,dp);
    }
    public int recurse(int i,int j,List<Integer> list,int dp[][]){
        if(i>j){
            return 0;
        }
        if(dp[i][j]!=0){
            return dp[i][j];
        }
        int max=Integer.MIN_VALUE;
        for(int k=i;k<=j;k++){
            int coins=list.get(i-1)*list.get(k)*list.get(j+1)+recurse(i,k-1,list,dp)+recurse(k+1,j,list,dp);
            max=Math.max(coins,max);
        }
        return dp[i][j]=max;
    }
}
