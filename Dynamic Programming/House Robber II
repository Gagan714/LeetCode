class Solution {
    public int rob(int[] nums) {
        if(nums.length==1){
            return nums[0];
        }
        if(nums.length==2){
            return Math.max(nums[0],nums[1]);
        }
        int dp1[]=new int[nums.length];
        dp1[1]=nums[1];
        for(int i=2;i<nums.length;i++){
            int take=nums[i]+dp1[i-2];
            int dont=dp1[i-1];
            dp1[i]=Math.max(take,dont);
        }
        int a= Math.max(dp1[nums.length-1],dp1[nums.length-2]);
        int dp2[]=new int[nums.length-1];
        dp2[0]=nums[0];
        for(int i=1;i<nums.length-1;i++){
            int take=nums[i];
            if(i>1){
                take+=dp2[i-2];
            }
            int dont=dp2[i-1];
            dp2[i]=Math.max(take,dont);
        }
        int b=Math.max(dp2[dp2.length-1],dp2[dp2.length-2]);
        return Math.max(a,b);
    }
}
