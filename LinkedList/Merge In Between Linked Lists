/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
        int count=0;
        ListNode current=list1;
        ListNode A=new ListNode(0);
        ListNode B=new ListNode(0);
        while(current.next!=null){
            if(count==a-1){
                A=current;
            }
            if(count==b){
             B=current;
            }
            current=current.next;
            count++;
        }
        A.next=list2;
        while(list2.next!=null){
            list2=list2.next;
        }
        list2.next=B.next;
        return list1;
    }
}
