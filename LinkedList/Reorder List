/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mid(ListNode head){
        ListNode slow = head;
        ListNode fast = head;
        while(fast!=null && fast.next!=null){
            fast = fast.next.next;
            slow = slow.next;
        }
        return slow;
    }
    public ListNode rev(ListNode head){
        ListNode curr = head; 
        ListNode prev = null;
        ListNode forward = null;
        while(curr!= null){
            forward = curr.next;
            curr.next = prev;
            prev = curr;
            curr = forward;
        }
        return prev;
    }
    public void reorderList(ListNode head) {
        ListNode mid = mid(head);
        ListNode midNext = mid.next;
        mid.next = null;
        ListNode p2 = rev(midNext);
        ListNode p1 = head;
        ListNode temp;
        while(p1!=null && p2!=null){
            temp = p1.next;
            p1.next = p2;
            p1 = p2;
            p2 = temp;
        }
    } 
}
