class Solution {
    public long makeIntegerBeautiful(long n, int target) {
        List<Integer> list = new ArrayList<>();
        while (n > 0) {
            list.add((int) (n % 10));
            n = n / 10;
        }
        long output = 0;
        for (int i = 0; i < list.size(); i++) {
            if (checkSum(list) > target) {
                output += (10 - list.get(i)) * Math.pow(10, i);
                list.set(i, 0);
                
                int j = i + 1;
                while (j < list.size()) {
                    if (list.get(j) < 9) {
                        list.set(j, list.get(j) + 1);
                        break;
                    } else {
                        list.set(j, 0);
                        j++;
                    }
                }
                if (j == list.size()) {
                    list.add(1);
                }
            }
        }
        return output;
    }

    public int checkSum(List<Integer> list) {
        int sum = 0;
        for (int i = 0; i < list.size(); i++) {
            sum += list.get(i);
        }
        return sum;
    }
}
