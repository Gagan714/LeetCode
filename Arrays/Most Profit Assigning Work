class Solution {
    public int maxProfitAssignment(int[] difficulty, int[] profit, int[] worker) {
        int [][]arr=new int[profit.length][2];
        for(int i=0;i<profit.length;i++){
            arr[i][0]=difficulty[i];
            arr[i][1]=profit[i];
        }
        Arrays.sort(arr,(a,b)->Integer.compare(a[0],b[0]));
        int maxProfit=0;
        for(int i=0;i<profit.length;i++){
            maxProfit=Math.max(arr[i][1],maxProfit);
            arr[i][1]=maxProfit;
        }
        int output=0;
        for(int i=0;i<worker.length;i++){
           int g=find(worker[i],arr);
           if(g>=0) output+=arr[g][1];
        }
        return output;
    }
    public int find(int target ,int [][]arr){
        int i=0;
        int j=arr.length-1;
        int index=-1;
        while(i<=j){
            int mid=i+(j-i)/2;
            if(arr[mid][0]<=target){
                index=mid;
                i=mid+1;
            }else{
                j=mid-1;
            }
        }
        return index;
    }
}
