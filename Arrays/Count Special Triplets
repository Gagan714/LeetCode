class Solution {
    public int specialTriplets(int[] nums) {
        HashMap<Double,Integer> right=new HashMap<>();
        HashMap<Double,Integer> left=new HashMap<>();
        int mod=1000000007;
        for(int i=1;i<nums.length;i++){
            double g=(double)nums[i]/2L;
            right.put(g,right.getOrDefault(g,0)+1);
        }
        long sum=0;
        for(int i=1;i<nums.length-1;i++){
            double left1=(double)nums[i-1]/2L;
            double right1=(double)nums[i]/2L;
            left.put(left1,left.getOrDefault(left1,0)+1);
            right.put(right1,right.get(right1)-1);
            int g=left.getOrDefault((double)nums[i],0);
            int m=right.getOrDefault((double)nums[i],0);
            if(g<0){
                g=0;
            }
            if(m<0){
                m=0;
            }
            sum = (sum + ((long)g* m) % mod) % mod;
        }
        return (int)sum;
    }
}
